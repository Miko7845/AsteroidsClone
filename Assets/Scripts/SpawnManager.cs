using UnityEngine;

public class SpawnManager : MonoBehaviour
{
    [SerializeField] Asteroid asteroidPrefab;                                      
    [SerializeField] float spawnRate = 2f;    // Время для спауна
    [SerializeField] int spawnWaveAmount = 2;
    float spawnDistance = 15.0f;              // Расстояния от центра экрана, на котором появляются астероиды
    float trajectoryVariance = 25.0f;         // Для хранения диапазона отклонения траектории астероида в градусах
    int asteroidsCount;
    bool spawnOn = true;                      // Разрешение для спаун. Чтобы Invoke сработал лишь один раз в Update

    void Update()
    {
        asteroidsCount = FindObjectsOfType<Asteroid>().Length;
        if (asteroidsCount <= 0 & spawnOn)
        {
            spawnOn = false;
            Invoke(nameof(SpawnWave), spawnRate);
        }
    }

    void SpawnWave()
    {
        for (int i = 0; i < spawnWaveAmount; i++)
        {
            Vector3 spawnDirection = Random.insideUnitCircle.normalized * spawnDistance;     // Выбираем случайное направление внутри круга с радиусом spawnDistance
            Vector3 spawnPoint = transform.position + spawnDirection;                        // Вычисляем точку появления астероида на этом направлении от центра экрана
            float variance = Random.Range(-trajectoryVariance, trajectoryVariance);          // Выбираем случайное отклонение траектории астероида в пределах trajectoryVariance
            Quaternion rotation = Quaternion.AngleAxis(variance, Vector3.forward);           // Создаем кватернион для поворота на этот угол вокруг оси Z
            Asteroid asteroid = Instantiate(asteroidPrefab, spawnPoint, rotation);           // Создаем экземпляр астероида из префаба в точке появления с поворотом
            asteroid.transform.eulerAngles = new Vector3(0.0f, 0.0f, Random.value * 360.0f); // Устанавливаем случайный угол поворота объекта вокруг оси Z
            asteroid.speed = asteroid.GetRandomSpeed(asteroid.minSpeed, asteroid.maxSpeed);  // Устанавливаем рандомный скорость для астероидов
        }
        spawnOn = true;
        spawnWaveAmount++;
    }
}